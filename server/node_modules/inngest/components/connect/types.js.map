{"version":3,"file":"types.js","names":[],"sources":["../../../src/components/connect/types.ts"],"sourcesContent":["import type { RegisterOptions } from \"../../types.ts\";\nimport type { Inngest } from \"../Inngest.ts\";\nimport type { InngestFunction } from \"../InngestFunction.ts\";\n\nexport const DEFAULT_SHUTDOWN_SIGNALS = [\"SIGINT\", \"SIGTERM\"];\n\nexport interface ConnectApp {\n  client: Inngest.Like;\n  functions?: Array<InngestFunction.Like>;\n}\n\nexport interface ConnectHandlerOptions extends RegisterOptions {\n  apps: ConnectApp[];\n\n  /**\n   * InstanceId represents a stable identifier to be used for identifying connected SDKs.\n   * This can be a hostname or other identifier that remains stable across restarts.\n   *\n   * If nil, this defaults to the current machine's hostname.\n   */\n  instanceId?: string;\n\n  maxConcurrency?: number;\n\n  /**\n   * By default, connections will be gracefully shut down when the current\n   * process receives a SIGINT or SIGTERM signal. Set this to an empty array to disable this behavior.\n   */\n  handleShutdownSignals?: string[];\n\n  rewriteGatewayEndpoint?: (endpoint: string) => string;\n}\n\nexport interface WorkerConnection {\n  connectionId: string;\n  closed: Promise<void>;\n  close: () => Promise<void>;\n  state: ConnectionState;\n}\n\nexport enum ConnectionState {\n  CONNECTING = \"CONNECTING\",\n  ACTIVE = \"ACTIVE\",\n  PAUSED = \"PAUSED\",\n  RECONNECTING = \"RECONNECTING\",\n  CLOSING = \"CLOSING\",\n  CLOSED = \"CLOSED\",\n}\n"],"mappings":";AAIA,MAAa,2BAA2B,CAAC,UAAU,UAAU;AAoC7D,IAAY,8DAAL;AACL;AACA;AACA;AACA;AACA;AACA"}