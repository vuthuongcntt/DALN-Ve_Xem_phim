{"version":3,"file":"logger.cjs","names":[],"sources":["../../src/middleware/logger.ts"],"sourcesContent":["/**\n * All kinds of arguments can come through\n *\n * Examples seen are\n * - string\n * - object / hash\n * - values used for string interpolation, basically anything\n *\n * See https://linear.app/inngest/issue/INN-1342/flush-logs-on-function-exitreturns for more details\n *\n * @public\n */\nexport type LogArg = unknown;\n\n/**\n * Based on https://datatracker.ietf.org/doc/html/rfc5424#autoid-11\n * it's pretty reasonable to expect a logger to have the following interfaces\n * available.\n */\nexport interface Logger {\n  info(...args: LogArg[]): void;\n  warn(...args: LogArg[]): void;\n  error(...args: LogArg[]): void;\n  debug(...args: LogArg[]): void;\n}\n\nexport class DefaultLogger implements Logger {\n  info(...args: LogArg[]) {\n    console.info(...args);\n  }\n\n  warn(...args: LogArg[]) {\n    console.warn(...args);\n  }\n\n  error(...args: LogArg[]) {\n    console.error(...args);\n  }\n\n  debug(...args: LogArg[]) {\n    console.debug(...args);\n  }\n}\n\n/**\n * ProxyLogger aims to provide a thin wrapper on user's provided logger.\n * It's expected to be turned on and off based on the function execution\n * context, so it doesn't result in duplicated logging.\n *\n * And also attempt to allow enough time for the logger to flush all logs.\n *\n * @public\n */\nexport class ProxyLogger implements Logger {\n  private readonly logger: Logger;\n  private enabled = false;\n\n  constructor(logger: Logger) {\n    this.logger = logger;\n\n    // Return a Proxy to forward arbitrary property access to the underlying\n    // logger. For example, if the user provides a logger that has a `foo`\n    // method, they can call `foo` on the ProxyLogger and it will call the\n    // underlying logger's `foo` method.\n    return new Proxy(this, {\n      get(target, prop, receiver): unknown {\n        // Handle ProxyLogger's own methods/properties.\n        if (prop in target) {\n          return Reflect.get(target, prop, receiver);\n        }\n\n        // Forward property access to the underlying logger.\n        return Reflect.get(target.logger, prop, receiver);\n      },\n    }) as ProxyLogger;\n  }\n\n  info(...args: LogArg[]) {\n    if (!this.enabled) return;\n    this.logger.info(...args);\n  }\n\n  warn(...args: LogArg[]) {\n    if (!this.enabled) return;\n    this.logger.warn(...args);\n  }\n\n  error(...args: LogArg[]) {\n    if (!this.enabled) return;\n    this.logger.error(...args);\n  }\n\n  debug(...args: LogArg[]) {\n    // there are loggers that don't implement \"debug\" by default\n    if (!this.enabled || !(typeof this.logger.debug === \"function\")) return;\n    this.logger.debug(...args);\n  }\n\n  enable() {\n    this.enabled = true;\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  async flush() {\n    // Allow 1s for the provided logger to handle flushing since the ones that do\n    // flushing usually has some kind of timeout of up to 1s.\n    //\n    // TODO:\n    // This should only happen when using a serverless environment because it's very\n    // costly from the compute perspective.\n    // server runtimes should just let the logger do their thing since most of them\n    // should have already figured what to do in those environments, be it threading or\n    // something else.\n    if (this.logger.constructor.name !== DefaultLogger.name) {\n      await new Promise((resolve) => {\n        setTimeout(() => resolve(null), 1000);\n      });\n    }\n  }\n}\n"],"mappings":";;AA0BA,IAAa,gBAAb,MAA6C;CAC3C,KAAK,GAAG,MAAgB;AACtB,UAAQ,KAAK,GAAG,KAAK;;CAGvB,KAAK,GAAG,MAAgB;AACtB,UAAQ,KAAK,GAAG,KAAK;;CAGvB,MAAM,GAAG,MAAgB;AACvB,UAAQ,MAAM,GAAG,KAAK;;CAGxB,MAAM,GAAG,MAAgB;AACvB,UAAQ,MAAM,GAAG,KAAK;;;;;;;;;;;;AAa1B,IAAa,cAAb,MAA2C;CACzC,AAAiB;CACjB,AAAQ,UAAU;CAElB,YAAY,QAAgB;AAC1B,OAAK,SAAS;AAMd,SAAO,IAAI,MAAM,MAAM,EACrB,IAAI,QAAQ,MAAM,UAAmB;AAEnC,OAAI,QAAQ,OACV,QAAO,QAAQ,IAAI,QAAQ,MAAM,SAAS;AAI5C,UAAO,QAAQ,IAAI,OAAO,QAAQ,MAAM,SAAS;KAEpD,CAAC;;CAGJ,KAAK,GAAG,MAAgB;AACtB,MAAI,CAAC,KAAK,QAAS;AACnB,OAAK,OAAO,KAAK,GAAG,KAAK;;CAG3B,KAAK,GAAG,MAAgB;AACtB,MAAI,CAAC,KAAK,QAAS;AACnB,OAAK,OAAO,KAAK,GAAG,KAAK;;CAG3B,MAAM,GAAG,MAAgB;AACvB,MAAI,CAAC,KAAK,QAAS;AACnB,OAAK,OAAO,MAAM,GAAG,KAAK;;CAG5B,MAAM,GAAG,MAAgB;AAEvB,MAAI,CAAC,KAAK,WAAW,EAAE,OAAO,KAAK,OAAO,UAAU,YAAa;AACjE,OAAK,OAAO,MAAM,GAAG,KAAK;;CAG5B,SAAS;AACP,OAAK,UAAU;;CAGjB,UAAU;AACR,OAAK,UAAU;;CAGjB,MAAM,QAAQ;AAUZ,MAAI,KAAK,OAAO,YAAY,SAAS,cAAc,KACjD,OAAM,IAAI,SAAS,YAAY;AAC7B,oBAAiB,QAAQ,KAAK,EAAE,IAAK;IACrC"}