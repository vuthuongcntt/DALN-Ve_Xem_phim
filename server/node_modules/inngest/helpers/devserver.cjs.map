{"version":3,"file":"devserver.cjs","names":["defaultDevServerHost","devServerHost","envDevServerHost"],"sources":["../../src/helpers/devserver.ts"],"sourcesContent":["import { defaultDevServerHost } from \"./consts.ts\";\nimport { devServerHost as envDevServerHost } from \"./env.ts\";\n\n// re-export from devserver.ts\n\n/**\n * A simple type map that we can transparently use `fetch` later without having\n * to fall in to the self-referencing `const fetch: typeof fetch = ...` which\n * fails.\n */\ntype FetchT = typeof fetch;\n\n/**\n * Attempts to contact the dev server, returning a boolean indicating whether or\n * not it was successful.\n *\n * @example devServerUrl(process.env[envKeys.DevServerUrl], \"/your-path\")\n */\nexport const devServerAvailable = async (\n  /**\n   * The host of the dev server. You should pass in an environment variable as\n   * this parameter.\n   */\n  host: string = defaultDevServerHost,\n\n  /**\n   * The fetch implementation to use to communicate with the dev server.\n   */\n  fetch: FetchT,\n): Promise<boolean> => {\n  try {\n    const url = devServerUrl(host, \"/dev\");\n    const result = await fetch(url.toString());\n    await result.json();\n    return true;\n  } catch (_e) {\n    return false;\n  }\n};\n\n/**\n * devServerUrl returns a full URL for the given path name.\n *\n * Because Cloudflare/V8 platforms don't allow process.env, you are expected\n * to pass in the host from the dev server env key:\n *\n * @example devServerUrl(processEnv(envKeys.DevServerUrl), \"/your-path\")\n * @example devServerUrl(\"http://localhost:8288/\", \"/your-path\")\n */\nexport const devServerUrl = (\n  host: string = devServerHost(),\n  pathname = \"\",\n): URL => {\n  return new URL(pathname, host.includes(\"://\") ? host : `http://${host}`);\n};\n\n/**\n * devServerHost exports the development server's domain by inspecting env\n * variables, or returns the default development server URL.\n *\n * This guarantees a specific URL as a string, as opposed to the env export\n * which only returns a value of the env var is set.\n */\nexport const devServerHost = (): string =>\n  envDevServerHost() || defaultDevServerHost;\n"],"mappings":";;;;;;;;;;AAkBA,MAAa,qBAAqB,OAKhC,OAAeA,qCAKf,UACqB;AACrB,KAAI;EACF,MAAM,MAAM,aAAa,MAAM,OAAO;AAEtC,SADe,MAAM,MAAM,IAAI,UAAU,CAAC,EAC7B,MAAM;AACnB,SAAO;UACA,IAAI;AACX,SAAO;;;;;;;;;;;;AAaX,MAAa,gBACX,OAAeC,iBAAe,EAC9B,WAAW,OACH;AACR,QAAO,IAAI,IAAI,UAAU,KAAK,SAAS,MAAM,GAAG,OAAO,UAAU,OAAO;;;;;;;;;AAU1E,MAAaA,wBACXC,2BAAkB,IAAIF"}